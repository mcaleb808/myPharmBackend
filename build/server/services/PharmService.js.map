{"version":3,"sources":["../../../api/server/services/PharmService.js"],"names":["PharmService","Pharmacie","findAll","newPharm","create","id","updatePharm","findOne","where","pharmToUpdate","update","thePharm","pharmToDelete","destroy"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEqBA,Y;;;;;;;;;;;;;;;;;;;uBAGFC,kBAAUC,OAAV,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMKC,Q;;;;;;;uBAELF,kBAAUG,MAAV,CAAiBD,QAAjB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMQE,E,EAAIC,Y;;;;;;;;uBAEGL,kBAAUM,OAAV,CAAkB;AAC5CC,kBAAAA,KAAK,EAAE;AACLH,oBAAAA,EAAE,EAAEA;AADC;AADqC,iBAAlB,C;;;AAAtBI,gBAAAA,a;;qBAMFA,a;;;;;;uBACIR,kBAAUS,MAAV,CAAiBJ,YAAjB,EAA8B;AAClCE,kBAAAA,KAAK,EAAE;AACLH,oBAAAA,EAAE,EAAEA;AADC;AAD2B,iBAA9B,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAWWA,E;;;;;;;;uBAEIJ,kBAAUM,OAAV,CAAkB;AACvCC,kBAAAA,KAAK,EAAE;AACLH,oBAAAA,EAAE,EAAEA;AADC;AADgC,iBAAlB,C;;;AAAjBM,gBAAAA,Q;kDAKCA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;qDAMcN,E;;;;;;;;uBAEOJ,kBAAUM,OAAV,CAAkB;AAC5CC,kBAAAA,KAAK,EAAE;AACLH,oBAAAA,EAAE,EAAEA;AADC;AADqC,iBAAlB,C;;;AAAtBO,gBAAAA,a;;qBAMFA,a;;;;;;uBACIX,kBAAUY,OAAV,CAAkB;AACtBL,kBAAAA,KAAK,EAAE;AACLH,oBAAAA,EAAE,EAAEA;AADC;AADe,iBAAlB,C;;;kDAKCO,a","sourcesContent":["import { Pharmacie } from '../src/models';\n\nexport default class PharmService {\n  static async getAllPharms() {\n    try {\n      return await Pharmacie.findAll();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async addPharm(newPharm) {\n    try {\n      return await Pharmacie.create(newPharm);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async updatePharm(id, updatePharm) {\n    try {\n      const pharmToUpdate = await Pharmacie.findOne({\n        where: {\n          id: id\n        }\n      });\n\n      if (pharmToUpdate) {\n        await Pharmacie.update(updatePharm, {\n          where: {\n            id: id\n          }\n        });\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async getAPharm(id) {\n    try {\n      const thePharm = await Pharmacie.findOne({\n        where: {\n          id: id\n        }\n      });\n      return thePharm;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async deletePharm(id) {\n    try {\n      const pharmToDelete = await Pharmacie.findOne({\n        where: {\n          id: id\n        }\n      });\n\n      if (pharmToDelete) {\n        await Pharmacie.destroy({\n          where: {\n            id: id\n          }\n        });\n        return pharmToDelete;\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n"],"file":"PharmService.js"}