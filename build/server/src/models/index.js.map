{"version":3,"sources":["../../../../api/server/src/models/index.js"],"names":["fs","require","path","Sequelize","config","basename","__filename","env","process","NODE_ENV","__dirname","db","sequelize","use_env_variable","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB;;AAEA,IAAMC,QAAQ,GAAGH,IAAI,CAACG,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAML,MAAM,GAAGH,OAAO,WAAIS,SAAJ,0BAAP,CAA4CH,GAA5C,CAAf;;AACA,IAAMI,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIR,MAAM,CAACS,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcK,OAAO,CAACD,GAAR,CAAYH,MAAM,CAACS,gBAAnB,CAAd,EAAoDT,MAApD,CAAZ;AACD,CAFD,MAEO;AACLQ,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CACVC,MAAM,CAACU,QADG,EAEVV,MAAM,CAACW,QAFG,EAGVX,MAAM,CAACY,QAHG,EAIVZ,MAJU,CAAZ;AAMD;;AAEDJ,EAAE,CAACiB,WAAH,CAAeP,SAAf,EACGQ,MADH,CAEI,UAAAC,IAAI;AAAA,SACFA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2BD,IAAI,KAAKd,QAApC,IAAgDc,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KADjE;AAAA,CAFR,EAKGC,OALH,CAKW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGX,SAAS,UAAT,CAAiBV,IAAI,CAACsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAAjB,CAAd;AACAR,EAAAA,EAAE,CAACY,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CARH;AAUAG,MAAM,CAACC,IAAP,CAAYhB,EAAZ,EAAgBW,OAAhB,CAAwB,UAAAM,SAAS,EAAI;AACnC,MAAIjB,EAAE,CAACiB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BlB,IAAAA,EAAE,CAACiB,SAAD,CAAF,CAAcC,SAAd,CAAwBlB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACR,SAAH,GAAeA,SAAf;AAEA2B,MAAM,CAACC,OAAP,GAAiBpB,EAAjB","sourcesContent":["const fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\n\nrequire('dotenv').config();\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(`${__dirname}/../config/config.js`)[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(\n    config.database,\n    config.username,\n    config.password,\n    config\n  );\n}\n\nfs.readdirSync(__dirname)\n  .filter(\n    file =>\n      file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js'\n  )\n  .forEach(file => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"],"file":"index.js"}