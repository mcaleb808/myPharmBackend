{"version":3,"sources":["../../../api/server/controllers/PharmController.js"],"names":["util","Util","PharmController","req","res","PharmService","getAllPharms","allPharms","length","setSuccess","send","setError","body","name","logo","newPharm","insurances","Set","insurance","addPharm","createPharm","message","updatedPharm","id","params","updatePharm","getAPharm","thePharm","deletePharm","pharmToDelete"],"mappings":"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","sourcesContent":["import PharmService from '../services/PharmService';\nimport Util from '../utils/utils';\n\nconst util = new Util();\n\nclass PharmController {\n  static async getAllPharms(req, res) {\n    try {\n      const allPharms = await PharmService.getAllPharms();\n      if (allPharms.length > 0) {\n        util.setSuccess(200, 'Pharmacies retrieved', allPharms);\n      } else {\n        util.setSuccess(200, 'No pharmacy found');\n      }\n      return util.send(res);\n    } catch (err) {\n      util.setError(400, err);\n      return util.send(res);\n    }\n  }\n\n  static async addPharm(req, res) {\n    if (!req.body.name || !req.body.logo) {\n      util.setError(400, 'Please provide complete details');\n      return util.send(res);\n    }\n\n    const newPharm = req.body;\n\n    const insurances = [...new Set(newPharm.insurance)];\n\n    try {\n      const createPharm = await PharmService.addPharm({\n        name: newPharm.name,\n        logo: newPharm.logo,\n        insurance: insurances\n      });\n      util.setSuccess(201, 'Pharm Added', createPharm);\n      return util.send(res);\n    } catch (err) {\n      util.setError(400, err.message);\n      return util.send(res);\n    }\n  }\n\n  static async updatePharm(req, res) {\n    const updatedPharm = req.body;\n    const { id } = req.params;\n\n    try {\n      const updatePharm = await PharmService.updatePharm(id, updatedPharm);\n      if (!updatedPharm) {\n        util.setError(404, `Cannot find a Pharmacy with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Pharmacy updated', updatePharm);\n      }\n      return util.send(res);\n    } catch (err) {\n      util.setError(404, err);\n      return util.send(res);\n    }\n  }\n\n  static async getAPharm(req, res) {\n    const { id } = req.params;\n\n    try {\n      const thePharm = await PharmService.getAPharm(id);\n\n      if (!thePharm) {\n        util.setError(404, `Cannot find Pharmacy with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Found Pharmacy', thePharm);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async deletePharm(req, res) {\n    const { id } = req.params;\n\n    try {\n      const pharmToDelete = await PharmService.deletePharm(id);\n\n      if (pharmToDelete) {\n        util.setSuccess(200, 'Pharmacy deleted');\n      } else {\n        util.setError(404, `Pharmacy with the id ${id} cannot be found`);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n}\n\nexport default PharmController;\n"],"file":"PharmController.js"}